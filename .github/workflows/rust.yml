name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.debian-port }} ${{ matrix.distro }}
    # Run steps on a matrix of 4 arch/distro combinations
    strategy:
      matrix:
        include:
          # Debian port name: https://www.debian.org/ports/arm/
          #- arch: aarch64
          #  distro: ubuntu20.04
          #- arch: aarch64
          #  distro: ubuntu22.04 
          - arch: armv7
            debian-port: armhf
            distro: ubuntu20.04
          #- arch: armv7
          #  distro: ubuntu22.04
    steps:
    #- uses: actions/checkout@v4
    #  name: Checkout Nzyme-docker-compose
    #  with:
    #    repository: iagotomas/nzyme
    #    sparse-checkout: |
    #      libpcap0.8-dev_99_all.deb
    - uses: actions/checkout@v4
      name: Checkout Nzyme
      with:
        repository: iagotomas/nzyme
    
    - uses: uraimo/run-on-arch-action@v2
      name: Run commands
      id: runcmd
      with:
        arch: ${{ matrix.arch }}
        distro: ${{ matrix.distro }}
        # Not required, but speeds up builds by storing container images in
        # a GitHub package registry.
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/nzyme"
        install: |
          case "${{ matrix.distro }}" in
            ubuntu*)
              echo "deb-src http://ports.ubuntu.com/ubuntu-ports focal main" > /etc/apt/sources.list.d/debian-src.list
              apt-get update -q -y
              apt-get install -y dpkg-dev build-essential cargo openssl librust-openssl-dev libnl-genl-3-dev dh-autoreconf flex libbluetooth-dev autotools-dev bison debhelper
              mkdir -p source/libpcap/source
              cd source/libpcap/source
              apt-get source -y libpcap0.8=1.10.4-4
              ls -hatlr
              cd libpcap-1.10.4-4
              export with_libnl=yes
              apt build-dep .
              dpkg-buildpackage -uc -us -b
              cd ..
              ls -haltr
              dpkg -i libpcap0.8_1.10.4-4_${{ matrix.debian-port }}.deb
              ;;
          esac
        run: |
          pwd
          ls -ahltr
          cd /nzyme/tap
          cargo build --verbose -r
    - name: Upload nzyme-tap ${{ matrix.debian-port }} ${{ matrix.distro }}
      uses: actions/upload-artifact@v4
      with:
        name: nzyme-tap-${{ matrix.debian-port }}-${{ matrix.distro }}
        path: tap/target/release/nzyme-tap
