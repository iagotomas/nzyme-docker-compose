name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    # Run steps on a matrix of 4 arch/distro combinations
    strategy:
      matrix:
        include:
          #- arch: aarch64
          #  distro: ubuntu20.04
          #- arch: aarch64
          #  distro: ubuntu22.04 
          - arch: armv7
            distro: ubuntu20.04
          - arch: armv7
            distro: ubuntu22.04
    steps:
    - uses: actions/checkout@v3
      name: Checkout Nzyme
      with:
        repository: nzymedefense/nzyme
    
    - uses: uraimo/run-on-arch-action@v2
      name: Run commands
      id: runcmd
      with:
        arch: ${{ matrix.arch }}
        distro: ${{ matrix.distro }}
        # Not required, but speeds up builds by storing container images in
        # a GitHub package registry.
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/nzyme"
        install: |
          case "${{ matrix.arch }}" in
            armv7*)
              echo "deb-src http://ports.ubuntu.com/ubuntu-ports focal main" > /etc/apt/sources.list.d/debian-src.list
              apt-get update -q -y
              apt-get install -y dpkg-dev build-essential cargo openssl librust-openssl-dev
              mkdir -p source/libpcap/source
              cd source/libpcap/source
              apt-get source libpcap0.8
              ls -hatlr
              cd libpcap-1.9.1
              cat debian/control
              patch -p0 <<'EOF'
              Index: debian/control
              <+>UTF-8
              ===================================================================
              --- debian/control     (date 1487543450000)
              +++ debian/control     (revision )
              @@ -371,6 +371,7 @@
                      // attribute values
                      foreach (array_intersect_key($rowData, $this->_attributes) as $attributeCode => $value) {
                          if ($newCustomer && !strlen($value)) {
              +                               $entityRow[$attributeCode] = $value;
                              continue;
                          }

              EOF
              apt-get build-dep -y .
              dpkg-buildpackage -uc -us -b
              cd ..
              ls -ahltr
              dpkg -i libpcap0.8_1.9.1-3_*.deb
              ;;
          esac
        run: |
          pwd
          ls -ahltr
          cd /nzyme/tap
          cargo build --verbose -r
    - name: Upload nzyme-tap ${{ matrix.distro }} ${{ matrix.arch }}
      uses: actions/upload-artifact@v4
      with:
        name: nzyme-tap-${{ matrix.arch }}-${{ matrix.distro }}
        path: tap/target/release/nzyme-tap
